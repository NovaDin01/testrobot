using System.Collections.Generic;
using UnityEngine;

public class DStarLite : MonoBehaviour
{
    public Transform startPoint; // Начальная точка
    public Transform goalPoint; // Конечная точка
    public LayerMask obstacleMask; // Маска препятствий
    public float obstacleCheckDistance = 1f; // Расстояние между проверками препятствий

    private List<Node> path;

    void Start()
    {
        path = FindPath(startPoint.position, goalPoint.position);
    }

    void Update()
    {
        // Визуализируем найденный путь
        for (int i = 0; i < path.Count - 1; i++)
        {
            Debug.DrawLine(path[i].position, path[i + 1].position, Color.green);
        }
    }

    List<Node> FindPath(Vector3 start, Vector3 goal)
    {
        // TODO: Реализовать алгоритм D* Lite

        List<Node> newPath = new List<Node>();
        // Временно, для примера, используем простой путь от старта до цели
        newPath.Add(new Node(start));
        newPath.Add(new Node(goal));
        return newPath;
    }

    // Проверка, является ли позиция препятствием
    bool IsObstacle(Vector3 position)
    {
        return Physics.CheckSphere(position, obstacleCheckDistance, obstacleMask);
    }

    // Вспомогательный класс для представления узла (позиции)
    public class Node
    {
        public Vector3 position;

        public Node(Vector3 _position)
        {
            position = _position;
        }
    }
}
