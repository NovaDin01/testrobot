using UnityEngine;
using System.Collections.Generic;

public class RRT : MonoBehaviour
{
    public Transform start; // Начальная позиция
    public Transform goal; // Цель
    public LayerMask obstacleMask; // Слои препятствий
    public float stepSize = 1f; // Размер шага
    public float moveSpeed = 5f; // Скорость перемещения
    public int maxIterations = 5000; // Максимальное количество итераций

    private List<Vector3> nodes = new List<Vector3>(); // Список узлов дерева
    private List<Vector3> path = new List<Vector3>(); // Путь к цели
    private bool isRunning = false; // Флаг, определяющий, идет ли процесс поиска пути

    void Start()
    {
        FindPath();
    }

    void FindPath()
    {
        isRunning = true;

        nodes.Clear();
        nodes.Add(start.position);

        int iterations = 0;

        while (iterations < maxIterations)
        {
            Vector3 randomPoint = GetRandomPoint();
            Vector3 nearestNode = GetNearestNode(randomPoint);
            Vector3 newNode = MoveTowards(nearestNode, randomPoint, stepSize);

            if (!ObstacleInPath(nearestNode, newNode))
            {
                nodes.Add(newNode);

                if (Vector3.Distance(newNode, goal.position) < stepSize)
                {
                    path = ConstructPath();
                    break;
                }
            }

            iterations++;
        }

        isRunning = false;
    }

    Vector3 GetRandomPoint()
    {
        // Генерируем случайную точку в пространстве
        Vector3 randomPoint = new Vector3(Random.Range(-50f, 50f), 0f, Random.Range(-50f, 50f));
        return randomPoint;
    }

    Vector3 GetNearestNode(Vector3 point)
    {
        // Находим ближайший узел в дереве к заданной точке
        float minDist = Mathf.Infinity;
        Vector3 nearestNode = Vector3.zero;

        foreach (Vector3 node in
